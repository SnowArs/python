# _____Крылов А.В.
#
## Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3
import math

cube = 0
sum = 0
sum_min = 0
row_0 = []
f = 0
s = 0

number = int(input("введите число N от 0 до 2 000 000 000:"))
if number > 0 and number < 2000000000:
	while cube <= number: 		# вычисление грани квадрата в котором находится число
					sum_min = sum  		# и последнего числа, предшествующего квадрату
					sum = cube**2 + sum
					if sum >= number:
						break
					cube += 1
	while f <= (cube):			# определения этажа, на котором стоит искомый квадрат, так называемый 0 этаж
		row_0.append(f + s)
		f +=1
		s = row_0[-1]
	
	find_row = row_0[-2] + math.ceil((number - sum_min) / cube)		# определение ряда
	
	find_col = (number - sum_min) / cube 													# поиск колонки
	find_col_int= int(find_col)
	if (find_col - find_col_int) * cube == 0:
		find_col_real = cube
	else:
		find_col_real = math.ceil((find_col - find_col_int) * cube)
		
	#print(cube, sum_min, row_0[-2], find_row, find_col, find_col_int)
	print("комната находится на ", find_row, "этаже, ", find_col_real, "слева")
else:
	print("число выходит за заданные пределы")
